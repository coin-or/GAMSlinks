unit gdxdpdef; { delphi procedure wrapper generated by generated by apiwrapper }

{$p- no open parameters ==> no maxlen byte}
{$v+ force var strings}
{$h- short only }

interface

uses
   sysutils,
   gmsgen,gxdefs;

const extlib = 'gdxdclib.dll';

const dt_set   = 0;  { gdxsytype }
      dt_par   = 1;
      dt_var   = 2;
      dt_equ   = 3;
      dt_alias = 4;

const sv_valund  = 0;  { gdxspecvalue }
      sv_valna   = 1;
      sv_valpin  = 2;
      sv_valmin  = 3;
      sv_valeps  = 4;
      sv_normal  = 5;
      sv_acronym = 6;

type
   terrorcallback = function(errcount:integer; const msg:shortstring):integer; stdcall;
   tdatastoreproc = procedure(const indx: tgdxuelindex; const vals: tgdxvalues); stdcall;

//tries to load dll from os default location
//name for the dll is automatic
function  gdxgetready(var msg: shortstring): boolean;
//tries to load dll from main program directory; if that fails
//loads dll from os default location
//name for the dll is automatic
function  gdxgetreadyx(var msg: shortstring): boolean;
//loads dll from specified directory
//name for the dll is automatic
function gdxgetreadyd(const dir: shortstring; var msg: shortstring): boolean;
//loads dll from the full path specified
//no changes are made to the name (platform and file extension)
function gdxgetreadyl(const libname: shortstring; var msg: shortstring): boolean;

//tries to load dll from os default location
//name for the dll is automatic
function gdxcreate(var pgdx: pointer; var msg: shortstring): boolean;
//tries to load dll from main program directory; if that fails
//loads dll from os default location
//name for the dll is automatic
function gdxcreatex(var pgdx: pointer; var msg: shortstring): boolean;
//loads dll from specified directory
//name for the dll is automatic
function gdxcreated(var pgdx: pointer; const dir: shortstring; var msg: shortstring): boolean;
//loads dll from the full path specified
function gdxcreatel(var pgdx: pointer; const libname: shortstring; var msg: shortstring): boolean;

procedure gdxfree  (var pgdx: pointer);

// functions and procedures
procedure gdxsetloadpath          (const s: shortstring); stdcall; external extlib;
procedure gdxgetloadpath          (var s: shortstring); stdcall; external extlib;
function  gdxacronymcount         (pgdx: pointer): integer; stdcall; external extlib;
function  gdxacronymgetinfo       (pgdx: pointer; n: integer; out aname: shortstring; out atext: shortstring; var indx: integer): integer; stdcall; external extlib;
function  gdxacronymindex         (pgdx: pointer; v: double): integer; stdcall; external extlib;
function  gdxacronymname          (pgdx: pointer; v: double; out aname: shortstring): integer; stdcall; external extlib;
function  gdxacronymsetinfo       (pgdx: pointer; n: integer; const aname: shortstring; const atext: shortstring; indx: integer): integer; stdcall; external extlib;
function  gdxacronymvalue         (pgdx: pointer; indx: integer): double; stdcall; external extlib;
function  gdxaddalias             (pgdx: pointer; const aname1: shortstring; const aname2: shortstring): integer; stdcall; external extlib;
function  gdxaddsettext           (pgdx: pointer; const s: shortstring; var n: integer): integer; stdcall; external extlib;
function  gdxclose                (pgdx: pointer): integer; stdcall; external extlib;
function  gdxdataerrorcount       (pgdx: pointer): integer; stdcall; external extlib;
function  gdxdataerrorrecord      (pgdx: pointer; rn: integer; var aelements: tgdxuelindex; var avals: tgdxvalues): integer; stdcall; external extlib;
function  gdxdatareaddone         (pgdx: pointer): integer; stdcall; external extlib;
function  gdxdatareadfilteredstart(pgdx: pointer; synr: integer; const adomainnrs: tgdxuelindex; var nrrecs: integer): integer; stdcall; external extlib;
function  gdxdatareadmap          (pgdx: pointer; rn: integer; var aelements: tgdxuelindex; var avals: tgdxvalues; var afdim: integer): integer; stdcall; external extlib;
function  gdxdatareadmapstart     (pgdx: pointer; synr: integer; var nrrecs: integer): integer; stdcall; external extlib;
function  gdxdatareadraw          (pgdx: pointer; var aelements: tgdxuelindex; var avals: tgdxvalues; var afdim: integer): integer; stdcall; external extlib;
function  gdxdatareadrawstart     (pgdx: pointer; synr: integer; var nrrecs: integer): integer; stdcall; external extlib;
function  gdxdatareadslice        (pgdx: pointer; const afiltelements: tgdxstrindex; var adim: integer; dp: tdatastoreproc): integer; stdcall; external extlib;
function  gdxdatareadslicestart   (pgdx: pointer; asynr: integer; var anrelems: tgdxuelindex): integer; stdcall; external extlib;
function  gdxdatareadstr          (pgdx: pointer; out astrelements: tgdxstrindex; var avals: tgdxvalues; var afdim: integer): integer; stdcall; external extlib;
function  gdxdatareadstrstart     (pgdx: pointer; synr: integer; var nrrecs: integer): integer; stdcall; external extlib;
function  gdxdatasliceuels        (pgdx: pointer; const aindx: tgdxuelindex; out auels: tgdxstrindex): integer; stdcall; external extlib;
function  gdxdatawritedone        (pgdx: pointer): integer; stdcall; external extlib;
function  gdxdatawritemap         (pgdx: pointer; const aelements: tgdxuelindex; const avals: tgdxvalues): integer; stdcall; external extlib;
function  gdxdatawritemapstart    (pgdx: pointer; const aname: shortstring; const atext: shortstring; adim: integer; atype: integer; auserinfo: integer): integer; stdcall; external extlib;
function  gdxdatawriteraw         (pgdx: pointer; const aelements: tgdxuelindex; const avals: tgdxvalues): integer; stdcall; external extlib;
function  gdxdatawriterawstart    (pgdx: pointer; const aname: shortstring; const atext: shortstring; adim: integer; atype: integer; auserinfo: integer): integer; stdcall; external extlib;
function  gdxdatawritestr         (pgdx: pointer; const astrelements: tgdxstrindex; const avals: tgdxvalues): integer; stdcall; external extlib;
function  gdxdatawritestrstart    (pgdx: pointer; const aname: shortstring; const atext: shortstring; adim: integer; atype: integer; auserinfo: integer): integer; stdcall; external extlib;
function  gdxgetdllversion        (pgdx: pointer; out v: shortstring): integer; stdcall; external extlib;
function  gdxerrorcount           (pgdx: pointer): integer; stdcall; external extlib;
function  gdxerrorstr             (pgdx: pointer; n: integer; out s: shortstring): integer; stdcall; external extlib;
function  gdxfileinfo             (pgdx: pointer; var filever: integer; var comprlev: integer): integer; stdcall; external extlib;
function  gdxfileversion          (pgdx: pointer; out filestr: shortstring; out producestr: shortstring): integer; stdcall; external extlib;
function  gdxfilterexists         (pgdx: pointer; n: integer): integer; stdcall; external extlib;
function  gdxfilterregister       (pgdx: pointer; v: integer): integer; stdcall; external extlib;
function  gdxfilterregisterdone   (pgdx: pointer): integer; stdcall; external extlib;
function  gdxfilterregisterstart  (pgdx: pointer; nr: integer): integer; stdcall; external extlib;
function  gdxfindsymbol           (pgdx: pointer; const aname: shortstring; var aix: integer): integer; stdcall; external extlib;
function  gdxgetelemtext          (pgdx: pointer; n: integer; out s: shortstring; var node: integer): integer; stdcall; external extlib;
function  gdxgetlasterror         (pgdx: pointer): integer; stdcall; external extlib;
function  gdxgetspecialvalues     (pgdx: pointer; var avals: tgdxsvals): integer; stdcall; external extlib;
function  gdxgetuel               (pgdx: pointer; uelnr: integer; out s: shortstring): integer; stdcall; external extlib;
function  gdxmapvalue             (pgdx: pointer; d: double; var sv: integer): integer; stdcall; external extlib;
function  gdxopenread             (pgdx: pointer; const afn: shortstring; var errnr: integer): integer; stdcall; external extlib;
function  gdxopenwrite            (pgdx: pointer; const afn: shortstring; const aproducer: shortstring; var errnr: integer): integer; stdcall; external extlib;
function  gdxopenwriteex          (pgdx: pointer; const afn: shortstring; const aproducer: shortstring; compr: integer; var errnr: integer): integer; stdcall; external extlib;
function  gdxresetspecialvalues   (pgdx: pointer): integer; stdcall; external extlib;
function  gdxsethastext           (pgdx: pointer; n: integer): integer; stdcall; external extlib;
function  gdxsetreadspecialvalues (pgdx: pointer; const avals: tgdxsvals): integer; stdcall; external extlib;
function  gdxsetspecialvalues     (pgdx: pointer; const avals: tgdxsvals): integer; stdcall; external extlib;
function  gdxsettextnodenr        (pgdx: pointer; n: integer; node: integer): integer; stdcall; external extlib;
function  gdxsettracelevel        (pgdx: pointer; n: integer; const s: shortstring): integer; stdcall; external extlib;
function  gdxsymbindxmaxlength    (pgdx: pointer; synr: integer; var diminfo: tgdxuelindex): integer; stdcall; external extlib;
function  gdxsymbmaxlength        (pgdx: pointer): integer; stdcall; external extlib;
function  gdxsymboladdcomment     (pgdx: pointer; synr: integer; const s: shortstring): integer; stdcall; external extlib;
function  gdxsymbolgetcomment     (pgdx: pointer; synr: integer; n: integer; out s: shortstring): integer; stdcall; external extlib;
function  gdxsymbolgetdomain      (pgdx: pointer; synr: integer; var domainids: tgdxuelindex): integer; stdcall; external extlib;
function  gdxsymbolinfo           (pgdx: pointer; synr: integer; out aname: shortstring; var adim: integer; var atyp: integer): integer; stdcall; external extlib;
function  gdxsymbolinfox          (pgdx: pointer; synr: integer; var acount: integer; var auserinfo: integer; out aexpltxt: shortstring): integer; stdcall; external extlib;
function  gdxsymbolsetdomain      (pgdx: pointer; const domainids: tgdxstrindex): integer; stdcall; external extlib;
function  gdxsysteminfo           (pgdx: pointer; var nrsy: integer; var nruel: integer): integer; stdcall; external extlib;
function  gdxuelmaxlength         (pgdx: pointer): integer; stdcall; external extlib;
function  gdxuelregisterdone      (pgdx: pointer): integer; stdcall; external extlib;
function  gdxuelregistermap       (pgdx: pointer; uelnr: integer; const elem: shortstring): integer; stdcall; external extlib;
function  gdxuelregistermapstart  (pgdx: pointer): integer; stdcall; external extlib;
function  gdxuelregisterraw       (pgdx: pointer; const elem: shortstring): integer; stdcall; external extlib;
function  gdxuelregisterrawstart  (pgdx: pointer): integer; stdcall; external extlib;
function  gdxuelregisterstr       (pgdx: pointer; const elem: shortstring; var uelnr: integer): integer; stdcall; external extlib;
function  gdxuelregisterstrstart  (pgdx: pointer): integer; stdcall; external extlib;
function  gdxumfinduel            (pgdx: pointer; const s: shortstring; var en: integer; var umap: integer): integer; stdcall; external extlib;
function  gdxumuelget             (pgdx: pointer; n: integer; out s: shortstring; var umap: integer): integer; stdcall; external extlib;
function  gdxumuelinfo            (pgdx: pointer; var nrelem: integer; var highmap: integer): integer; stdcall; external extlib;
function  gdxcurrentdim           (pgdx: pointer): integer; stdcall; external extlib;


implementation
procedure xcreate(var pgdx: pointer); stdcall; external extlib;
procedure xfree  (var pgdx: pointer); stdcall; external extlib;

function gdxcreate(var pgdx: pointer; var msg: shortstring): boolean;
begin
xcreate(pgdx);
result := true;
end;

function gdxcreatex(var pgdx: pointer; var msg: shortstring): boolean;
begin
xcreate(pgdx);
result := true;
end;

function gdxcreated(var pgdx: pointer; const dir: shortstring; var msg: shortstring): boolean;
begin
xcreate(pgdx);
result := true;
end;

function gdxcreatel(var pgdx: pointer; const libname: shortstring; var msg: shortstring): boolean;
begin
xcreate(pgdx);
result := true;
end;

function gdxgetready(var msg: shortstring): boolean;
begin
msg := '';
result := true
end;

function gdxgetreadyx(var msg: shortstring): boolean;
begin
msg := '';
result := true
end;

function gdxgetreadyd(const dir: shortstring; var msg: shortstring): boolean;
begin
msg := '';
result := true
end;

function gdxgetreadyl(const libname: shortstring; var msg: shortstring): boolean;
begin
msg := '';
result := true
end;

procedure gdxfree  (var pgdx: pointer);
begin
xfree(pgdx);
end;

initialization

end.
