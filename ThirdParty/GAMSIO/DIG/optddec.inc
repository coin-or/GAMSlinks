{ Delphi Object declarations generated by apiwrapper }

   function  optReadDefinition(const fn: ShortString): Integer;
   function  optReadParameterFile(const fn: ShortString): Integer;
   procedure optReadFromStr(const s: ShortString);
   function  optWriteParameterFile(const fn: ShortString): Integer;
   procedure optClearMessages;
   procedure optAddMessage(const info: ShortString);
   procedure optGetMessage(N: Integer; var info: ShortString; var iType: Integer);
   procedure optResetAll;
   procedure optResetAllRecent;
   procedure optResetRecentChanges;
   procedure optShowHelp(const HlpID: ShortString);
   function  optResetNr(ANr: Integer): Integer;
   function  optFindStr(const AName: ShortString; var ANr: Integer; var ARefNr: Integer): Integer;
   function  optGetInfoNr(ANr: Integer; var ADefined: Integer; var ADefinedR: Integer; var ARefNr: Integer; var ADataType: Integer; var AOptType: Integer; var ASubType: Integer): Integer;
   function  optGetValuesNr(ANr: Integer; var ASName: ShortString; var AIVal: Integer; var ADVal: Double; var ASVal: ShortString): Integer;
   function  optSetValuesNr(ANr: Integer; AIVal: Integer; ADVal: Double; const ASVal: ShortString): Integer;
   function  optSetValues2Nr(ANr: Integer; AIVal: Integer; ADVal: Double; const ASVal: ShortString): Integer;
   procedure optVersion(var sversion: ShortString);
   procedure optDefinitionFile(var sfilename: ShortString);
   function  optGetFromAnyStrList(idash: Integer; var skey: ShortString; var sval: ShortString): Integer;
   function  optGetFromListStr(const skey: ShortString; var sval: ShortString): Integer;
   function  optListCountStr(const skey: ShortString): Integer;
   function  optReadFromListStr(const skey: ShortString; iPos: Integer; var sval: ShortString): Integer;
   function  optSynonymCount: Integer;
   function  optGetSynonym(N: Integer; var SSyn: ShortString; var SName: ShortString): Integer;
   procedure optEchoSet(V: Integer);
   function  optEOLOnlySet(ival: Integer): Integer;
   procedure optNoBoundsSet(ival: Integer);
   procedure optErrorCount(var iErrors: Integer; var iWarnings: Integer);
   function  optGetBoundsInt(ANr: Integer; var ilval: Integer; var ihval: Integer; var idval: Integer): Integer;
   function  optGetBoundsDbl(ANr: Integer; var dlval: Double; var dhval: Double; var ddval: Double): Integer;
   function  optGetDefaultStr(ANr: Integer; var sval: ShortString): Integer;
   function  optGetIntNr(ANr: Integer; var AIVal: Integer): Integer;
   function  optGetInt2Nr(ANr: Integer; var AIVal: Integer): Integer;
   function  optSetIntNr(ANr: Integer; AIVal: Integer): Integer;
   function  optSetInt2Nr(ANr: Integer; AIVal: Integer): Integer;
   function  optGetStrNr(ANr: Integer; var ASVal: ShortString): Integer;
   function  optGetOptHelpNr(ANr: Integer; var AName: ShortString; var AHc: Integer; var AGroup: Integer): Integer;
   function  optGetEnumHelp(ANr: Integer; AOrd: Integer; var AHc: Integer; var AHelpStr: ShortString): Integer;
   function  optGetEnumStrNr(ANr: Integer; var ASVal: ShortString; var AOrd: Integer): Integer;
   function  optGetEnumCount(ANr: Integer; var ACount: Integer): Integer;
   function  optGetEnumValue(ANr: Integer; AOrd: Integer; var AValInt: Integer; var AValStr: ShortString): Integer;
   function  optGetStr2Nr(ANr: Integer; var ASVal: ShortString): Integer;
   function  optSetStrNr(ANr: Integer; const ASVal: ShortString): Integer;
   function  optSetStr2Nr(ANr: Integer; const ASVal: ShortString): Integer;
   function  optGetDblNr(ANr: Integer; var ADVal: Double): Integer;
   function  optGetDbl2Nr(ANr: Integer; var ADVal: Double): Integer;
   function  optSetDblNr(ANr: Integer; ADVal: Double): Integer;
   function  optSetDbl2Nr(ANr: Integer; ADVal: Double): Integer;
   function  optGetValStr(const AName: ShortString; var ASVal: ShortString): Integer;
   function  optGetVal2Str(const AName: ShortString; var ASVal: ShortString): Integer;
   function  optGetNameNr(ANr: Integer; var ASName: ShortString): Integer;
   function  optGetDefinedNr(ANr: Integer; var AIVal: Integer): Integer;
   function  optGetHelpNr(ANr: Integer; var ASOpt: ShortString; var ASHelp: ShortString): Integer;
   function  optGetGroupNr(ANr: Integer; var AName: ShortString; var AGroup: Integer; var AHc: Integer; var AHelp: ShortString): Integer;
   function  optGetGroupGrpNr(AGroup: Integer): Integer;
   function  optGetOptGroupNr(ANr: Integer): Integer;
   function  optGetDotOptNr(ANr: Integer; var AName: ShortString; var AObjNr: Integer; var ADim: Integer; var AValue: Double): Integer;
   function  optGetDotOptUel(ANr: Integer; ADim: Integer; var AUEL: ShortString): Integer;
   function  optGetIndicatorNr(ANr: Integer; var EquName: ShortString; var VarName: ShortString; var EquDim: Integer; var VarDim: Integer; var AValue: Integer): Integer;
   function  optGetEquIndicatorNr(ANr: Integer; ADim: Integer; var AIndex: ShortString): Integer;
   function  optGetVarIndicatorNr(ANr: Integer; ADim: Integer; var AIndex: ShortString): Integer;
   function  optIndicatorCount(var ANrErrors: Integer): Integer;
   function  optDotOptCount(var ANrErrors: Integer): Integer;
   function  optSetRefNr(ANr: Integer; AValue: Integer): Integer;
   function  optSetRefNrStr(const AOpt: ShortString; AValue: Integer): Integer;
   function  optGetConstName(cgroup: Integer; cindex: Integer; var cname: ShortString): Integer;
   function  optGetTypeName(TNr: Integer; var sTName: ShortString): Integer;
   function  optLookUp(const AOpt: ShortString): Integer;
   procedure optReadFromPChar(p: PChar);

   property optCount: Integer read GetCount;
   property optMessageCount: Integer read GetMessageCount;
   property optGroupCount: Integer read GetGroupCount;
   property optRecentEnabled: Integer read GetRecentEnabled write SetRecentEnabled;
{ End Delphi Object declarations generated by apiwrapper }
