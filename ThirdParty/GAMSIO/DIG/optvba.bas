' visual basic for applications procedure wrapper generated by generated by apiwrapper

public const optdatanone    = 0  'optdatatype
public const optdatainteger = 1  'optdatatype
public const optdatadouble  = 2  'optdatatype
public const optdatastring  = 3  'optdatatype
public const optdatastrlist = 4  'optdatatype

public const opttypeinteger   = 0  'optoptiontype
public const opttypedouble    = 1  'optoptiontype
public const opttypestring    = 2  'optoptiontype
public const opttypeboolean   = 3  'optoptiontype
public const opttypeenumstr   = 4  'optoptiontype
public const opttypeenumint   = 5  'optoptiontype
public const opttypemultilist = 6  'optoptiontype
public const opttypestrlist   = 7  'optoptiontype
public const opttypemacro     = 8  'optoptiontype
public const opttypeimmediate = 9  'optoptiontype

public const optsubrequired = 0  'optoptionsubtype
public const optsubnovalue  = 1  'optoptionsubtype
public const optsuboptional = 2  'optoptionsubtype
public const optsub2values  = 3  'optoptionsubtype

public const optmsginputecho    = 0  'optmsgtype
public const optmsghelp         = 1  'optmsgtype
public const optmsgdefineerror  = 2  'optmsgtype
public const optmsgvalueerror   = 3  'optmsgtype
public const optmsgvaluewarning = 4  'optmsgtype
public const optmsgdeprecated   = 5  'optmsgtype
public const optmsgfileenter    = 6  'optmsgtype
public const optmsgfileleave    = 7  'optmsgtype
public const optmsgtoomanymsgs  = 8  'optmsgtype
public const optmsgusererror    = 9  'optmsgtype
public declare sub optsetloadpath lib "optdclib" (byval s as string)
public declare sub optgetloadpath lib "optdclib" (byval s as string)

private declare function dll_optreaddefinition lib "optdclib" alias "optreaddefinition" (byval popt as long,byref fn as byte) as long
private declare function dll_optreadparameterfile lib "optdclib" alias "optreadparameterfile" (byval popt as long,byref fn as byte) as long
private declare sub dll_optreadfromstr lib "optdclib" alias "optreadfromstr" (byval popt as long,byref s as byte)
private declare function dll_optwriteparameterfile lib "optdclib" alias "optwriteparameterfile" (byval popt as long,byref fn as byte) as long
public  declare sub optclearmessages lib "optdclib" (byval popt as long)
private declare sub dll_optaddmessage lib "optdclib" alias "optaddmessage" (byval popt as long,byref info as byte)
private declare sub dll_optgetmessage lib "optdclib" alias "optgetmessage" (byval popt as long,byval n as long,byref info as byte,byref itype as long)
public  declare sub optresetall lib "optdclib" (byval popt as long)
public  declare sub optresetallrecent lib "optdclib" (byval popt as long)
public  declare sub optresetrecentchanges lib "optdclib" (byval popt as long)
private declare sub dll_optshowhelp lib "optdclib" alias "optshowhelp" (byval popt as long,byref hlpid as byte)
public  declare function optresetnr lib "optdclib" (byval popt as long,byval anr as long) as long
private declare function dll_optfindstr lib "optdclib" alias "optfindstr" (byval popt as long,byref aname as byte,byref anr as long,byref arefnr as long) as long
public  declare function optgetinfonr lib "optdclib" (byval popt as long,byval anr as long,byref adefined as long,byref adefinedr as long,byref arefnr as long,byref adatatype as long,byref aopttype as long,byref asubtype as long) as long
private declare function dll_optgetvaluesnr lib "optdclib" alias "optgetvaluesnr" (byval popt as long,byval anr as long,byref asname as byte,byref aival as long,byref adval as double,byref asval as byte) as long
private declare function dll_optsetvaluesnr lib "optdclib" alias "optsetvaluesnr" (byval popt as long,byval anr as long,byval aival as long,byval adval as double,byref asval as byte) as long
private declare function dll_optsetvalues2nr lib "optdclib" alias "optsetvalues2nr" (byval popt as long,byval anr as long,byval aival as long,byval adval as double,byref asval as byte) as long
private declare sub dll_optversion lib "optdclib" alias "optversion" (byval popt as long,byref sversion as byte)
private declare sub dll_optdefinitionfile lib "optdclib" alias "optdefinitionfile" (byval popt as long,byref sfilename as byte)
private declare function dll_optgetfromanystrlist lib "optdclib" alias "optgetfromanystrlist" (byval popt as long,byval idash as long,byref skey as byte,byref sval as byte) as long
private declare function dll_optgetfromliststr lib "optdclib" alias "optgetfromliststr" (byval popt as long,byref skey as byte,byref sval as byte) as long
private declare function dll_optlistcountstr lib "optdclib" alias "optlistcountstr" (byval popt as long,byref skey as byte) as long
private declare function dll_optreadfromliststr lib "optdclib" alias "optreadfromliststr" (byval popt as long,byref skey as byte,byval ipos as long,byref sval as byte) as long
public  declare function optsynonymcount lib "optdclib" (byval popt as long) as long
private declare function dll_optgetsynonym lib "optdclib" alias "optgetsynonym" (byval popt as long,byval n as long,byref ssyn as byte,byref sname as byte) as long
public  declare sub optechoset lib "optdclib" (byval popt as long,byval v as long)
public  declare function opteolonlyset lib "optdclib" (byval popt as long,byval ival as long) as long
public  declare sub optnoboundsset lib "optdclib" (byval popt as long,byval ival as long)
public  declare sub opterrorcount lib "optdclib" (byval popt as long,byref ierrors as long,byref iwarnings as long)
public  declare function optgetboundsint lib "optdclib" (byval popt as long,byval anr as long,byref ilval as long,byref ihval as long,byref idval as long) as long
public  declare function optgetboundsdbl lib "optdclib" (byval popt as long,byval anr as long,byref dlval as double,byref dhval as double,byref ddval as double) as long
private declare function dll_optgetdefaultstr lib "optdclib" alias "optgetdefaultstr" (byval popt as long,byval anr as long,byref sval as byte) as long
public  declare function optgetintnr lib "optdclib" (byval popt as long,byval anr as long,byref aival as long) as long
public  declare function optgetint2nr lib "optdclib" (byval popt as long,byval anr as long,byref aival as long) as long
public  declare function optsetintnr lib "optdclib" (byval popt as long,byval anr as long,byval aival as long) as long
public  declare function optsetint2nr lib "optdclib" (byval popt as long,byval anr as long,byval aival as long) as long
private declare function dll_optgetstrnr lib "optdclib" alias "optgetstrnr" (byval popt as long,byval anr as long,byref asval as byte) as long
private declare function dll_optgetopthelpnr lib "optdclib" alias "optgetopthelpnr" (byval popt as long,byval anr as long,byref aname as byte,byref ahc as long,byref agroup as long) as long
private declare function dll_optgetenumhelp lib "optdclib" alias "optgetenumhelp" (byval popt as long,byval anr as long,byval aord as long,byref ahc as long,byref ahelpstr as byte) as long
private declare function dll_optgetenumstrnr lib "optdclib" alias "optgetenumstrnr" (byval popt as long,byval anr as long,byref asval as byte,byref aord as long) as long
public  declare function optgetenumcount lib "optdclib" (byval popt as long,byval anr as long,byref acount as long) as long
private declare function dll_optgetenumvalue lib "optdclib" alias "optgetenumvalue" (byval popt as long,byval anr as long,byval aord as long,byref avalint as long,byref avalstr as byte) as long
private declare function dll_optgetstr2nr lib "optdclib" alias "optgetstr2nr" (byval popt as long,byval anr as long,byref asval as byte) as long
private declare function dll_optsetstrnr lib "optdclib" alias "optsetstrnr" (byval popt as long,byval anr as long,byref asval as byte) as long
private declare function dll_optsetstr2nr lib "optdclib" alias "optsetstr2nr" (byval popt as long,byval anr as long,byref asval as byte) as long
public  declare function optgetdblnr lib "optdclib" (byval popt as long,byval anr as long,byref adval as double) as long
public  declare function optgetdbl2nr lib "optdclib" (byval popt as long,byval anr as long,byref adval as double) as long
public  declare function optsetdblnr lib "optdclib" (byval popt as long,byval anr as long,byval adval as double) as long
public  declare function optsetdbl2nr lib "optdclib" (byval popt as long,byval anr as long,byval adval as double) as long
private declare function dll_optgetvalstr lib "optdclib" alias "optgetvalstr" (byval popt as long,byref aname as byte,byref asval as byte) as long
private declare function dll_optgetval2str lib "optdclib" alias "optgetval2str" (byval popt as long,byref aname as byte,byref asval as byte) as long
private declare function dll_optgetnamenr lib "optdclib" alias "optgetnamenr" (byval popt as long,byval anr as long,byref asname as byte) as long
public  declare function optgetdefinednr lib "optdclib" (byval popt as long,byval anr as long,byref aival as long) as long
private declare function dll_optgethelpnr lib "optdclib" alias "optgethelpnr" (byval popt as long,byval anr as long,byref asopt as byte,byref ashelp as byte) as long
private declare function dll_optgetgroupnr lib "optdclib" alias "optgetgroupnr" (byval popt as long,byval anr as long,byref aname as byte,byref agroup as long,byref ahc as long,byref ahelp as byte) as long
public  declare function optgetgroupgrpnr lib "optdclib" (byval popt as long,byval agroup as long) as long
public  declare function optgetoptgroupnr lib "optdclib" (byval popt as long,byval anr as long) as long
private declare function dll_optgetdotoptnr lib "optdclib" alias "optgetdotoptnr" (byval popt as long,byval anr as long,byref aname as byte,byref aobjnr as long,byref adim as long,byref avalue as double) as long
private declare function dll_optgetdotoptuel lib "optdclib" alias "optgetdotoptuel" (byval popt as long,byval anr as long,byval adim as long,byref auel as byte) as long
private declare function dll_optgetindicatornr lib "optdclib" alias "optgetindicatornr" (byval popt as long,byval anr as long,byref equname as byte,byref varname as byte,byref equdim as long,byref vardim as long,byref avalue as long) as long
private declare function dll_optgetequindicatornr lib "optdclib" alias "optgetequindicatornr" (byval popt as long,byval anr as long,byval adim as long,byref aindex as byte) as long
private declare function dll_optgetvarindicatornr lib "optdclib" alias "optgetvarindicatornr" (byval popt as long,byval anr as long,byval adim as long,byref aindex as byte) as long
public  declare function optindicatorcount lib "optdclib" (byval popt as long,byref anrerrors as long) as long
public  declare function optdotoptcount lib "optdclib" (byval popt as long,byref anrerrors as long) as long
public  declare function optsetrefnr lib "optdclib" (byval popt as long,byval anr as long,byval avalue as long) as long
private declare function dll_optsetrefnrstr lib "optdclib" alias "optsetrefnrstr" (byval popt as long,byref aopt as byte,byval avalue as long) as long
private declare function dll_optgetconstname lib "optdclib" alias "optgetconstname" (byval popt as long,byval cgroup as long,byval cindex as long,byref cname as byte) as long
private declare function dll_optgettypename lib "optdclib" alias "optgettypename" (byval popt as long,byval tnr as long,byref stname as byte) as long
private declare function dll_optlookup lib "optdclib" alias "optlookup" (byval popt as long,byref aopt as byte) as long
public  declare sub optreadfrompchar lib "optdclib" (byval popt as long,byref p as byte)

public declare function optcount lib "optdclib.dll" (byval popt as long) as long
public declare function optmessagecount lib "optdclib.dll" (byval popt as long) as long
public declare function optgroupcount lib "optdclib.dll" (byval popt as long) as long
public declare function optrecentenabled lib "optdclib.dll" (byval popt as long) as long
public declare sub optrecentenabledset lib "optdclib.dll" (byval popt as long, byval  x as long)

private declare function xcreate lib "optdclib" (byref popt as long) as boolean
private declare function xfree   lib "optdclib" (byref popt as long) as boolean

public function optcreate(byref popt as long, byref msgbuf as string) as boolean
    optcreate = xcreate(popt)
    if popt = 0 then
        optcreate = false
    end if
end function

public function optcreatex(byref popt as long, byref msgbuf as string) as boolean
    optcreatex = xcreate(popt)
    if popt = 0 then
        optcreatex = false
    end if
end function

public function optcreated(byref popt as long, byval dirname as string, byref msgbuf as string) as boolean
    optcreated = xcreate(popt)
    if popt = 0 then
        optcreated = false
    end if
end function

public function optcreatel(byref popt as long, byval libname as string, byref msgbuf as string) as boolean
    optcreatel = xcreate(popt)
    if popt = 0 then
        optcreatel = false
    end if
end function

public function optfree(byref popt as long) as boolean
   optfree = xfree(popt)
end function

private sub convertbas2pas(s as string, b() as byte)
    dim i as integer
    dim slen as integer
    slen = len(s)
    if (slen > ubound(b)) then
        slen = ubound(b)
    end if
    b(0) = slen
    for i = 1 to slen
        b(i) = asc(mid(s, i, 1))
    next i
end sub

private sub convertpas2bas(b() as byte, s as string)
    dim i as integer
    dim slen as integer
    slen = b(0)
    s = ""
    for i = 1 to slen
        s = s & chr(b(i))
    next i
end sub

public function optreaddefinition(popt as long,fn as string) as long
   dim cpy_fn as string255
   call convertbas2pas(fn, cpy_fn.s)
   optreaddefinition = dll_optreaddefinition(popt,cpy_fn.s(0))
end function

public function optreadparameterfile(popt as long,fn as string) as long
   dim cpy_fn as string255
   call convertbas2pas(fn, cpy_fn.s)
   optreadparameterfile = dll_optreadparameterfile(popt,cpy_fn.s(0))
end function

public sub optreadfromstr(popt as long,s as string)
   dim cpy_s as string255
   call convertbas2pas(s, cpy_s.s)
   call dll_optreadfromstr(popt,cpy_s.s(0))
end sub

public function optwriteparameterfile(popt as long,fn as string) as long
   dim cpy_fn as string255
   call convertbas2pas(fn, cpy_fn.s)
   optwriteparameterfile = dll_optwriteparameterfile(popt,cpy_fn.s(0))
end function

public sub optaddmessage(popt as long,info as string)
   dim cpy_info as string255
   call convertbas2pas(info, cpy_info.s)
   call dll_optaddmessage(popt,cpy_info.s(0))
end sub

public sub optgetmessage(popt as long,n as long,info as string,itype as long)
   dim cpy_info as string255
   call dll_optgetmessage(popt,n,cpy_info.s(0),itype)
   call convertpas2bas(cpy_info.s,info)
end sub

public sub optshowhelp(popt as long,hlpid as string)
   dim cpy_hlpid as string255
   call convertbas2pas(hlpid, cpy_hlpid.s)
   call dll_optshowhelp(popt,cpy_hlpid.s(0))
end sub

public function optfindstr(popt as long,aname as string,anr as long,arefnr as long) as long
   dim cpy_aname as string255
   call convertbas2pas(aname, cpy_aname.s)
   optfindstr = dll_optfindstr(popt,cpy_aname.s(0),anr,arefnr)
end function

public function optgetvaluesnr(popt as long,anr as long,asname as string,aival as long,adval as double,asval as string) as long
   dim cpy_asname as string255
   dim cpy_asval as string255
   optgetvaluesnr = dll_optgetvaluesnr(popt,anr,cpy_asname.s(0),aival,adval,cpy_asval.s(0))
   call convertpas2bas(cpy_asname.s,asname)
   call convertpas2bas(cpy_asval.s,asval)
end function

public function optsetvaluesnr(popt as long,anr as long,aival as long,adval as double,asval as string) as long
   dim cpy_asval as string255
   call convertbas2pas(asval, cpy_asval.s)
   optsetvaluesnr = dll_optsetvaluesnr(popt,anr,aival,adval,cpy_asval.s(0))
end function

public function optsetvalues2nr(popt as long,anr as long,aival as long,adval as double,asval as string) as long
   dim cpy_asval as string255
   call convertbas2pas(asval, cpy_asval.s)
   optsetvalues2nr = dll_optsetvalues2nr(popt,anr,aival,adval,cpy_asval.s(0))
end function

public sub optversion(popt as long,sversion as string)
   dim cpy_sversion as string255
   call dll_optversion(popt,cpy_sversion.s(0))
   call convertpas2bas(cpy_sversion.s,sversion)
end sub

public sub optdefinitionfile(popt as long,sfilename as string)
   dim cpy_sfilename as string255
   call dll_optdefinitionfile(popt,cpy_sfilename.s(0))
   call convertpas2bas(cpy_sfilename.s,sfilename)
end sub

public function optgetfromanystrlist(popt as long,idash as long,skey as string,sval as string) as long
   dim cpy_skey as string255
   dim cpy_sval as string255
   optgetfromanystrlist = dll_optgetfromanystrlist(popt,idash,cpy_skey.s(0),cpy_sval.s(0))
   call convertpas2bas(cpy_skey.s,skey)
   call convertpas2bas(cpy_sval.s,sval)
end function

public function optgetfromliststr(popt as long,skey as string,sval as string) as long
   dim cpy_skey as string255
   dim cpy_sval as string255
   call convertbas2pas(skey, cpy_skey.s)
   optgetfromliststr = dll_optgetfromliststr(popt,cpy_skey.s(0),cpy_sval.s(0))
   call convertpas2bas(cpy_sval.s,sval)
end function

public function optlistcountstr(popt as long,skey as string) as long
   dim cpy_skey as string255
   call convertbas2pas(skey, cpy_skey.s)
   optlistcountstr = dll_optlistcountstr(popt,cpy_skey.s(0))
end function

public function optreadfromliststr(popt as long,skey as string,ipos as long,sval as string) as long
   dim cpy_skey as string255
   dim cpy_sval as string255
   call convertbas2pas(skey, cpy_skey.s)
   optreadfromliststr = dll_optreadfromliststr(popt,cpy_skey.s(0),ipos,cpy_sval.s(0))
   call convertpas2bas(cpy_sval.s,sval)
end function

public function optgetsynonym(popt as long,n as long,ssyn as string,sname as string) as long
   dim cpy_ssyn as string255
   dim cpy_sname as string255
   optgetsynonym = dll_optgetsynonym(popt,n,cpy_ssyn.s(0),cpy_sname.s(0))
   call convertpas2bas(cpy_ssyn.s,ssyn)
   call convertpas2bas(cpy_sname.s,sname)
end function

public function optgetdefaultstr(popt as long,anr as long,sval as string) as long
   dim cpy_sval as string255
   optgetdefaultstr = dll_optgetdefaultstr(popt,anr,cpy_sval.s(0))
   call convertpas2bas(cpy_sval.s,sval)
end function

public function optgetstrnr(popt as long,anr as long,asval as string) as long
   dim cpy_asval as string255
   optgetstrnr = dll_optgetstrnr(popt,anr,cpy_asval.s(0))
   call convertpas2bas(cpy_asval.s,asval)
end function

public function optgetopthelpnr(popt as long,anr as long,aname as string,ahc as long,agroup as long) as long
   dim cpy_aname as string255
   optgetopthelpnr = dll_optgetopthelpnr(popt,anr,cpy_aname.s(0),ahc,agroup)
   call convertpas2bas(cpy_aname.s,aname)
end function

public function optgetenumhelp(popt as long,anr as long,aord as long,ahc as long,ahelpstr as string) as long
   dim cpy_ahelpstr as string255
   optgetenumhelp = dll_optgetenumhelp(popt,anr,aord,ahc,cpy_ahelpstr.s(0))
   call convertpas2bas(cpy_ahelpstr.s,ahelpstr)
end function

public function optgetenumstrnr(popt as long,anr as long,asval as string,aord as long) as long
   dim cpy_asval as string255
   optgetenumstrnr = dll_optgetenumstrnr(popt,anr,cpy_asval.s(0),aord)
   call convertpas2bas(cpy_asval.s,asval)
end function

public function optgetenumvalue(popt as long,anr as long,aord as long,avalint as long,avalstr as string) as long
   dim cpy_avalstr as string255
   optgetenumvalue = dll_optgetenumvalue(popt,anr,aord,avalint,cpy_avalstr.s(0))
   call convertpas2bas(cpy_avalstr.s,avalstr)
end function

public function optgetstr2nr(popt as long,anr as long,asval as string) as long
   dim cpy_asval as string255
   optgetstr2nr = dll_optgetstr2nr(popt,anr,cpy_asval.s(0))
   call convertpas2bas(cpy_asval.s,asval)
end function

public function optsetstrnr(popt as long,anr as long,asval as string) as long
   dim cpy_asval as string255
   call convertbas2pas(asval, cpy_asval.s)
   optsetstrnr = dll_optsetstrnr(popt,anr,cpy_asval.s(0))
end function

public function optsetstr2nr(popt as long,anr as long,asval as string) as long
   dim cpy_asval as string255
   call convertbas2pas(asval, cpy_asval.s)
   optsetstr2nr = dll_optsetstr2nr(popt,anr,cpy_asval.s(0))
end function

public function optgetvalstr(popt as long,aname as string,asval as string) as long
   dim cpy_aname as string255
   dim cpy_asval as string255
   call convertbas2pas(aname, cpy_aname.s)
   optgetvalstr = dll_optgetvalstr(popt,cpy_aname.s(0),cpy_asval.s(0))
   call convertpas2bas(cpy_asval.s,asval)
end function

public function optgetval2str(popt as long,aname as string,asval as string) as long
   dim cpy_aname as string255
   dim cpy_asval as string255
   call convertbas2pas(aname, cpy_aname.s)
   optgetval2str = dll_optgetval2str(popt,cpy_aname.s(0),cpy_asval.s(0))
   call convertpas2bas(cpy_asval.s,asval)
end function

public function optgetnamenr(popt as long,anr as long,asname as string) as long
   dim cpy_asname as string255
   optgetnamenr = dll_optgetnamenr(popt,anr,cpy_asname.s(0))
   call convertpas2bas(cpy_asname.s,asname)
end function

public function optgethelpnr(popt as long,anr as long,asopt as string,ashelp as string) as long
   dim cpy_asopt as string255
   dim cpy_ashelp as string255
   optgethelpnr = dll_optgethelpnr(popt,anr,cpy_asopt.s(0),cpy_ashelp.s(0))
   call convertpas2bas(cpy_asopt.s,asopt)
   call convertpas2bas(cpy_ashelp.s,ashelp)
end function

public function optgetgroupnr(popt as long,anr as long,aname as string,agroup as long,ahc as long,ahelp as string) as long
   dim cpy_aname as string255
   dim cpy_ahelp as string255
   optgetgroupnr = dll_optgetgroupnr(popt,anr,cpy_aname.s(0),agroup,ahc,cpy_ahelp.s(0))
   call convertpas2bas(cpy_aname.s,aname)
   call convertpas2bas(cpy_ahelp.s,ahelp)
end function

public function optgetdotoptnr(popt as long,anr as long,aname as string,aobjnr as long,adim as long,avalue as double) as long
   dim cpy_aname as string255
   optgetdotoptnr = dll_optgetdotoptnr(popt,anr,cpy_aname.s(0),aobjnr,adim,avalue)
   call convertpas2bas(cpy_aname.s,aname)
end function

public function optgetdotoptuel(popt as long,anr as long,adim as long,auel as string) as long
   dim cpy_auel as string255
   optgetdotoptuel = dll_optgetdotoptuel(popt,anr,adim,cpy_auel.s(0))
   call convertpas2bas(cpy_auel.s,auel)
end function

public function optgetindicatornr(popt as long,anr as long,equname as string,varname as string,equdim as long,vardim as long,avalue as long) as long
   dim cpy_equname as string255
   dim cpy_varname as string255
   optgetindicatornr = dll_optgetindicatornr(popt,anr,cpy_equname.s(0),cpy_varname.s(0),equdim,vardim,avalue)
   call convertpas2bas(cpy_equname.s,equname)
   call convertpas2bas(cpy_varname.s,varname)
end function

public function optgetequindicatornr(popt as long,anr as long,adim as long,aindex as string) as long
   dim cpy_aindex as string255
   optgetequindicatornr = dll_optgetequindicatornr(popt,anr,adim,cpy_aindex.s(0))
   call convertpas2bas(cpy_aindex.s,aindex)
end function

public function optgetvarindicatornr(popt as long,anr as long,adim as long,aindex as string) as long
   dim cpy_aindex as string255
   optgetvarindicatornr = dll_optgetvarindicatornr(popt,anr,adim,cpy_aindex.s(0))
   call convertpas2bas(cpy_aindex.s,aindex)
end function

public function optsetrefnrstr(popt as long,aopt as string,avalue as long) as long
   dim cpy_aopt as string255
   call convertbas2pas(aopt, cpy_aopt.s)
   optsetrefnrstr = dll_optsetrefnrstr(popt,cpy_aopt.s(0),avalue)
end function

public function optgetconstname(popt as long,cgroup as long,cindex as long,cname as string) as long
   dim cpy_cname as string255
   optgetconstname = dll_optgetconstname(popt,cgroup,cindex,cpy_cname.s(0))
   call convertpas2bas(cpy_cname.s,cname)
end function

public function optgettypename(popt as long,tnr as long,stname as string) as long
   dim cpy_stname as string255
   optgettypename = dll_optgettypename(popt,tnr,cpy_stname.s(0))
   call convertpas2bas(cpy_stname.s,stname)
end function

public function optlookup(popt as long,aopt as string) as long
   dim cpy_aopt as string255
   call convertbas2pas(aopt, cpy_aopt.s)
   optlookup = dll_optlookup(popt,cpy_aopt.s(0))
end function
