/*  Java code generated by apiwrapper */
public class gdxjava {
   private int gdxPtr = 0;
   public native int    GetReady (String[] msg);
   public native int    GetReadyD(String dirName, String[] msg);
   public native int    GetReadyL(String libName, String[] msg);
   public native int    Create   (String[] msg);
   public native int    CreateD  (String dirName, String[] msg);
   public native int    CreateL  (String libName, String[] msg);
   public native int    Free     ();
   public native int    AcronymCount();
   public native int    AcronymGetInfo(int N, String []AName, String []Atext, int []Indx);
   public native int    AcronymIndex(double V);
   public native int    AcronymName(double V, String []AName);
   public native int    AcronymSetInfo(int N, String AName, String Atext, int Indx);
   public native double    AcronymValue(int Indx);
   public native int    AddAlias(String AName1, String AName2);
   public native int    AddSetText(String s, int []N);
   public native int    AutoConvert(int NV);
   public native int    Close();
   public native int    DataErrorCount();
   public native int    DataErrorRecord(int Rn, int []AElements, double []AVals);
   public native int    DataReadDone();
   public native int    DataReadFilteredStart(int SyNr, int []ADomainNrs, int []NrRecs);
   public native int    DataReadMap(int Rn, int []AElements, double []AVals, int []AFDim);
   public native int    DataReadMapStart(int SyNr, int []NrRecs);
   public native int    DataReadRaw(int []AElements, double []AVals, int []AFDim);
   public native int    DataReadRawStart(int SyNr, int []NrRecs);
   public native int    DataReadSlice(String []AFiltElements, int []ADim, String DP);
   public native int    DataReadSliceStart(int ASyNr, int []ANrElems);
   public native int    DataReadStr(String []AStrElements, double []AVals, int []AFDim);
   public native int    DataReadStrStart(int SyNr, int []NrRecs);
   public native int    DataSliceUELS(int []AIndx, String []AUELs);
   public native int    DataWriteDone();
   public native int    DataWriteMap(int []AElements, double []AVals);
   public native int    DataWriteMapStart(String AName, String Atext, int ADim, int AType, int AUserInfo);
   public native int    DataWriteRaw(int []AElements, double []AVals);
   public native int    DataWriteRawStart(String AName, String Atext, int ADim, int AType, int AUserInfo);
   public native int    DataWriteStr(String []AStrElements, double []AVals);
   public native int    DataWriteStrStart(String AName, String Atext, int ADim, int AType, int AUserInfo);
   public native int    GetDLLVersion(String []V);
   public native int    ErrorCount();
   public native int    ErrorStr(int N, String []s);
   public native int    FileInfo(int []FileVer, int []ComprLev);
   public native int    FileVersion(String []FileStr, String []ProduceStr);
   public native int    FilterExists(int N);
   public native int    FilterRegister(int V);
   public native int    FilterRegisterDone();
   public native int    FilterRegisterStart(int Nr);
   public native int    FindSymbol(String AName, int []AIx);
   public native int    GetElemText(int N, String []s, int []Node);
   public native int    GetLastError();
   public native int    GetSpecialValues(double []AVals);
   public native int    GetUEL(int UelNr, String []s);
   public native int    MapValue(double D, int []sv);
   public native int    OpenRead(String Afn, int []ErrNr);
   public native int    OpenWrite(String Afn, String AProducer, int []ErrNr);
   public native int    OpenWriteEx(String Afn, String AProducer, int Compr, int []ErrNr);
   public native int    ResetSpecialValues();
   public native int    SetHasText(int N);
   public native int    SetReadSpecialValues(double []AVals);
   public native int    SetSpecialValues(double []AVals);
   public native int    SetTextNodeNr(int N, int Node);
   public native int    SetTraceLevel(int N, String s);
   public native int    SymbIndxMaxLength(int SyNr, int []DimInfo);
   public native int    SymbMaxLength();
   public native int    SymbolAddComment(int SyNr, String s);
   public native int    SymbolGetComment(int SyNr, int N, String []s);
   public native int    SymbolGetDomain(int SyNr, int []DomainIDs);
   public native int    SymbolInfo(int SyNr, String []AName, int []ADim, int []ATyp);
   public native int    SymbolInfoX(int SyNr, int []ACount, int []AUserInfo, String []AExplTxt);
   public native int    SymbolSetDomain(String []DomainIDs);
   public native int    SystemInfo(int []NrSy, int []NrUel);
   public native int    UELMaxLength();
   public native int    UELRegisterDone();
   public native int    UELRegisterMap(int UelNr, String Elem);
   public native int    UELRegisterMapStart();
   public native int    UELRegisterRaw(String Elem);
   public native int    UELRegisterRawStart();
   public native int    UELRegisterStr(String Elem, int []UelNr);
   public native int    UELRegisterStrStart();
   public native int    UMFindUEL(String s, int []EN, int []UMap);
   public native int    UMUelGet(int N, String []s, int []UMap);
   public native int    UMUelInfo(int []NrElem, int []HighMap);
   public native int    CurrentDim();
   public        int    GetgdxPtr(){ return gdxPtr;}
   static
   {
      System.loadLibrary("gdxjni");
   }
}
