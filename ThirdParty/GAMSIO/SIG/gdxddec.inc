{ Delphi Object declarations generated by apiwrapper }

   function  gdxAcronymCount: Integer;
   function  gdxAcronymGetInfo(N: Integer; var AName: ShortString; var Atext: ShortString; var Indx: Integer): Integer;
   function  gdxAcronymIndex(V: Double): Integer;
   function  gdxAcronymName(V: Double; var AName: ShortString): Integer;
   function  gdxAcronymSetInfo(N: Integer; const AName: ShortString; const Atext: ShortString; Indx: Integer): Integer;
   function  gdxAcronymValue(Indx: Integer): Double;
   function  gdxAddAlias(const AName1: ShortString; const AName2: ShortString): Integer;
   function  gdxAddSetText(const s: ShortString; var N: Integer): Integer;
   function  gdxClose: Integer;
   function  gdxDataErrorCount: Integer;
   function  gdxDataErrorRecord(Rn: Integer; var AElements: TgdxUELIndex; var AVals: TgdxValues): Integer;
   function  gdxDataReadDone: Integer;
   function  gdxDataReadFilteredStart(SyNr: Integer; const ADomainNrs: TgdxUELIndex; var NrRecs: Integer): Integer;
   function  gdxDataReadMap(Rn: Integer; var AElements: TgdxUELIndex; var AVals: TgdxValues; var AFDim: Integer): Integer;
   function  gdxDataReadMapStart(SyNr: Integer; var NrRecs: Integer): Integer;
   function  gdxDataReadRaw(var AElements: TgdxUELIndex; var AVals: TgdxValues; var AFDim: Integer): Integer;
   function  gdxDataReadRawStart(SyNr: Integer; var NrRecs: Integer): Integer;
   function  gdxDataReadSlice(const AFiltElements: TgdxStrIndex; var ADim: Integer; DP: TDataStoreProc): Integer;
   function  gdxDataReadSliceStart(ASyNr: Integer; var ANrElems: TgdxUELIndex): Integer;
   function  gdxDataReadStr(var AStrElements: TgdxStrIndex; var AVals: TgdxValues; var AFDim: Integer): Integer;
   function  gdxDataReadStrStart(SyNr: Integer; var NrRecs: Integer): Integer;
   function  gdxDataSliceUELS(const AIndx: TgdxUELIndex; var AUELs: TgdxStrIndex): Integer;
   function  gdxDataWriteDone: Integer;
   function  gdxDataWriteMap(const AElements: TgdxUELIndex; const AVals: TgdxValues): Integer;
   function  gdxDataWriteMapStart(const AName: ShortString; const Atext: ShortString; ADim: Integer; AType: Integer; AUserInfo: Integer): Integer;
   function  gdxDataWriteRaw(const AElements: TgdxUELIndex; const AVals: TgdxValues): Integer;
   function  gdxDataWriteRawStart(const AName: ShortString; const Atext: ShortString; ADim: Integer; AType: Integer; AUserInfo: Integer): Integer;
   function  gdxDataWriteStr(const AStrElements: TgdxStrIndex; const AVals: TgdxValues): Integer;
   function  gdxDataWriteStrStart(const AName: ShortString; const Atext: ShortString; ADim: Integer; AType: Integer; AUserInfo: Integer): Integer;
   function  gdxGetDLLVersion(var V: ShortString): Integer;
   function  gdxErrorCount: Integer;
   function  gdxErrorStr(N: Integer; var s: ShortString): Integer;
   function  gdxFileInfo(var FileVer: Integer; var ComprLev: Integer): Integer;
   function  gdxFileVersion(var FileStr: ShortString; var ProduceStr: ShortString): Integer;
   function  gdxFilterExists(N: Integer): Integer;
   function  gdxFilterRegister(V: Integer): Integer;
   function  gdxFilterRegisterDone: Integer;
   function  gdxFilterRegisterStart(Nr: Integer): Integer;
   function  gdxFindSymbol(const AName: ShortString; var AIx: Integer): Integer;
   function  gdxGetElemText(N: Integer; var s: ShortString; var Node: Integer): Integer;
   function  gdxGetLastError: Integer;
   function  gdxGetSpecialValues(var AVals: TgdxSVals): Integer;
   function  gdxGetUEL(UelNr: Integer; var s: ShortString): Integer;
   function  gdxMapValue(D: Double; var sv: Integer): Integer;
   function  gdxOpenRead(const Afn: ShortString; var ErrNr: Integer): Integer;
   function  gdxOpenWrite(const Afn: ShortString; const AProducer: ShortString; var ErrNr: Integer): Integer;
   function  gdxOpenWriteEx(const Afn: ShortString; const AProducer: ShortString; Compr: Integer; var ErrNr: Integer): Integer;
   function  gdxResetSpecialValues: Integer;
   function  gdxSetHasText(N: Integer): Integer;
   function  gdxSetReadSpecialValues(const AVals: TgdxSVals): Integer;
   function  gdxSetSpecialValues(const AVals: TgdxSVals): Integer;
   function  gdxSetTextNodeNr(N: Integer; Node: Integer): Integer;
   function  gdxSetTraceLevel(N: Integer; const s: ShortString): Integer;
   function  gdxSymbIndxMaxLength(SyNr: Integer; var DimInfo: TgdxUELIndex): Integer;
   function  gdxSymbMaxLength: Integer;
   function  gdxSymbolAddComment(SyNr: Integer; const s: ShortString): Integer;
   function  gdxSymbolGetComment(SyNr: Integer; N: Integer; var s: ShortString): Integer;
   function  gdxSymbolGetDomain(SyNr: Integer; var DomainIDs: TgdxUELIndex): Integer;
   function  gdxSymbolInfo(SyNr: Integer; var AName: ShortString; var ADim: Integer; var ATyp: Integer): Integer;
   function  gdxSymbolInfoX(SyNr: Integer; var ACount: Integer; var AUserInfo: Integer; var AExplTxt: ShortString): Integer;
   function  gdxSymbolSetDomain(const DomainIDs: TgdxStrIndex): Integer;
   function  gdxSystemInfo(var NrSy: Integer; var NrUel: Integer): Integer;
   function  gdxUELMaxLength: Integer;
   function  gdxUELRegisterDone: Integer;
   function  gdxUELRegisterMap(UelNr: Integer; const Elem: ShortString): Integer;
   function  gdxUELRegisterMapStart: Integer;
   function  gdxUELRegisterRaw(const Elem: ShortString): Integer;
   function  gdxUELRegisterRawStart: Integer;
   function  gdxUELRegisterStr(const Elem: ShortString; var UelNr: Integer): Integer;
   function  gdxUELRegisterStrStart: Integer;
   function  gdxUMFindUEL(const s: ShortString; var EN: Integer; var UMap: Integer): Integer;
   function  gdxUMUelGet(N: Integer; var s: ShortString; var UMap: Integer): Integer;
   function  gdxUMUelInfo(var NrElem: Integer; var HighMap: Integer): Integer;
   function  gdxCurrentDim: Integer;

{ End Delphi Object declarations generated by apiwrapper }
