Index: Osi/src/OsiSpx/OsiSpxSolverInterface.cpp
===================================================================
--- Osi/src/OsiSpx/OsiSpxSolverInterface.cpp	(Revision 1331)
+++ Osi/src/OsiSpx/OsiSpxSolverInterface.cpp	(Arbeitskopie)
@@ -15,6 +15,7 @@
 #endif
 
 #include <iostream>
+#include <fstream>
 #include <cassert>
 #include <string>
 #include <numeric>
@@ -27,6 +28,12 @@
 #include "CoinPackedMatrix.hpp"
 #include "CoinWarmStartBasis.hpp"
 
+#include "slufactor.h"
+#include "spxsteeppr.h"
+#include "spxfastrt.h"
+#include "spxsumst.h"
+
+
 //#############################################################################
 // A couple of helper functions
 //#############################################################################
@@ -75,7 +82,11 @@
     spxsolver_.setType( soplex::SoPlex::ENTER );   // switch to primal simplex
   if( spxsolver_.rep() != soplex::SoPlex::COLUMN )
     spxsolver_.setRep( soplex::SoPlex::COLUMN );
-  spxsolver_.solve();
+  try {
+  	spxsolver_.solve();
+  } catch (soplex::SPxException e) {
+  	std::cerr << "soplex initial solve failed with exception " << e.what() << std::endl;
+  }
 }
 //-----------------------------------------------------------------------------
 void OsiSpxSolverInterface::resolve()
@@ -766,7 +777,7 @@
 	{
 	  redcost_ = new soplex::DVector( ncols );
 	  if( isProvenOptimal() )
-	    spxsolver_.getRdCost( *redcost_ );
+	    spxsolver_.getRedCost( *redcost_ );
 	  else
 	    redcost_->clear();
 	}
@@ -1328,10 +1339,21 @@
 {
   std::string f(filename);
   std::string e(extension);
-  std::string fullname = f + ".lp"; // SOPLEX cannot write MPS files yet! + "." + e;
-  spxsolver_.dumpFile( fullname.c_str() );
-  std::cout << "WARNING: LP file <" << fullname << "> created instead of "
-	    << "MPS file <" << f << "." << e << "> !" << std::endl;
+//  std::string fullname = f + ".lp"; // SOPLEX cannot write MPS files yet! + "." + e;
+//  spxsolver_.dumpFile( fullname.c_str() );
+//  std::cout << "WARNING: LP file <" << fullname << "> created instead of "
+//	    << "MPS file <" << f << "." << e << "> !" << std::endl;
+  std::string fullname = f+"."+e;
+  std::ofstream file(fullname.c_str());
+  if (!file.good()) {
+  	std::cerr << "Error opening file " << fullname << " for writing!" << std::endl;
+  	return;
+  }
+  soplex::DIdxSet integers(getNumIntegers());
+  for (int i = 0; i < getNumCols(); ++i)
+  	if (isInteger(i))
+  		integers.addIdx(i);
+  spxsolver_.writeMPS(file, NULL, NULL, &integers);
 }
 
 //#############################################################################
@@ -1364,8 +1386,13 @@
 #ifndef NDEBUG
   soplex::Param::setVerbose( 3 );
 #else
-  soplex::Param::setVerbose( 0 );
+  soplex::Param::setVerbose( 2 );
 #endif
+  //FIXME should we free the memory that we allocate here?
+  spxsolver_.setSolver(new soplex::SLUFactor());
+  spxsolver_.setPricer(new soplex::SPxSteepPR());
+  spxsolver_.setTester(new soplex::SPxFastRT());
+  spxsolver_.setStarter(new soplex::SPxSumST());
 }
 
 
Index: Osi/src/OsiSpx/OsiSpxSolverInterface.hpp
===================================================================
--- Osi/src/OsiSpx/OsiSpxSolverInterface.hpp	(Revision 1331)
+++ Osi/src/OsiSpx/OsiSpxSolverInterface.hpp	(Arbeitskopie)
@@ -18,6 +18,8 @@
 #include "OsiSolverInterface.hpp"
 #include "CoinWarmStartBasis.hpp"
 
+#define SoPlex SPxSolver
+
 /** SOPLEX Solver Interface
 
     Instantiation of OsiSpxSolverInterface for SOPLEX
