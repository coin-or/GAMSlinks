introduction
GAMS/CoinGlpk brings the open source LP/MIP solver Glpk from the GNU Open Software foundation to the broad audience of GAMS users.
The code has been written primarily by A. Makhorin.
The GAMS interface for Glpk is maintained by Stefan Vigerske, Humboldt University, in a COIN-OR project called GAMSlinks.
The interface uses the OSI Glpk interface written by Vivian De Smedt, Braden Hunsaker, and Lou Hafer.<BR>
For more information visit the web site for
<a href="http://www.coin-or.org">COIN-OR</a>,
<a href="https://projects.coin-or.org/Osi">OSI<a>,
<a href="http://www.gnu.org/software/glpk/glpk.html">Glpk<a>, and
<a href="https://projects.coin-or.org/GAMSlinks">GAMSlinks</a>.<BR>
For documentation of GAMS parameters, see the <A href="http://www.gams.com/docs/parame.htm">GAMS parameters documentation</A>.


startalg
This option determines whether a primal or dual simplex algorithm should be used to solve an LP or the root node of a MIP.


startalg.primal
Let GLPK use a primal simplex algorithm.


startalg.dual
Let GLPK use a dual simplex algorithm.


scaling
This option determines the method how the constraint matrix is scaled.
Note that scaling is only applied when the presolver is turned off (which by default is on).


scaling.off
Turn off scaling.


scaling.equilibrium
Let GLPK use an equilibrium scaling method.


scaling.mean
Let GLPK use a geometric mean scaling method.


scaling.meanequilibrium
Let GLPK use first a geometric mean scaling, then an equilibrium scaling.


pricing
Sets the pricing method for both primal and dual simplex.


pricing.textbook
Use a textbook pricing rule.


pricing.steepestedge
Use a steepest edge pricing rule.


factorization
Sets the method for the LP basis factorization.<BR>
If you observe that GLPK reports numerical instabilities than you could try to use a more stable factorization method.


factorization.forresttomlin
Does a LU factorization followed by Forrest-Tomlin updates.
This method is fast, but less stable than others.


factorization.bartelsgolub
Does a LU factorization followed by a Schur complement and Bartels-Golub updates.
This method is slower than Forrest-Tomlin, but more stable.


factorization.givens
Does a LU factorization followed by a Schur complement and Givens rotation updates.
This method is slower than Forrest-Tomlin, but more stable.


initbasis
Sets the method that computes the initial basis.
Setting this option has only effect if the <a href="#presolve">presolver</a> is turned off, which is on by default.


initbasis.standard
Uses the standard initial basis of all slacks.


initbasis.advanced
Computes an advanced initial basis.


initbasis.bixby
Uses Bixby's initial basis.


tol_dual
Absolute tolerance used to check if the current basis solution is dual feasible.
(Glpk manual: Do not change this parameter without detailed understanding its purpose.)


tol_primal
Relative tolerance used to check if the current basis solution is primal feasible.
(Glpk manual: Do not change this parameter without detailed understanding its purpose.)


tol_integer
Absolute tolerance used to check if the current basis solution is integer feasible.
(Glpk manual: Do not change this parameter without detailed understanding its purpose.)


backtracking
Determines which method to use for the backtracking heuristic.


backtracking.depthfirst
Let GLPK use a depth first search.


backtracking.breadthfirst
Let GLPK use a breadth first search.


backtracking.bestprojection
Let GLPK use a best projection heuristic.


presolve
Determines whether the LP presolver should be used.


presolve.0
Turns off the LP presolver.


presolve.1
Turns on the LP presolver.


reslim_fixedrun
Maximum time in seconds for solving the MIP with fixed discrete variables.


reslim
Maximum time in seconds.


iterlim
Maximum number of simplex iterations.
You can remove the limit on the simplex iterations by setting the <a href="#noiterlim">noiterlim option</a>.


noiterlim
Allows to switch off the <a href="#iterlim">simplex iteration limit</a>.


noiterlim.0
Keeps simplex iteration limit.


noiterlim.1
Turns off simplex iteration limit.


writemps
Write an MPS problem file.
The parameter value is the name of the MPS file.


optcr
Relative optimality criterion for a MIP.
Glpk uses this parameter as relative tolerance to check if the value of the objective function is not better than in the best known integer feasible solution.
