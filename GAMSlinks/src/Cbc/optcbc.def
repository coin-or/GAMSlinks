*
* optcbc.def
*

roundingheuristic integer 0 1 0 maxint 1 1 rounding heuristic
localsearch enumint 0 1 1 1 local search
 0 1 local search heuristic is not used
 1 1 local search heuristic is used
strongbranching enumint 0 1 1 1 strong branching
 0 1 strong branching is switched off
 1 1 strong branching is switched on
integerpresolve enumint 0 1 1 1 integer presolve
 0 1 don't do integer presolve
 1 1 do integer presolve
findsos enumint 0 1 1 1 find sos in integer presolve
 0 1 don't try to find special ordered sets
 1 1 try to find special ordered sets
cuts enumint 0 0 1 1 switch for cut generation
 -1 1 no cuts will be generated
 0 1 automatic
 1 1 cuts from all available cut classes will be generated
probing enumint 0 1 1 1 probing
 0 1 don't do probing
 1 1 do probing
gomorycuts enumint 0 1 1 1 Gomory cuts
 0 1 don't add gomory cuts
 1 1 add gomory cuts
knapsackcuts enumint 0 1 1 1 knapsack cover cuts
 0 1 don't add knapsack cover cuts
 1 1 add knapsack cover cuts
oddholecuts enumint 0 0 1 1 odd hole cuts
 0 1 don't add odd hole cuts
 1 1 add odd hole cuts
cliquecuts enumint 0 1 1 1 clique cuts
 0 1 don't add clique cuts
 1 1 add clique cuts
flowcovercuts enumint 0 1 1 1 flow cover cuts
 0 1 don't add flow cover cuts
 1 1 add flow cover cuts
mircuts enumint 0 1 1 1 mixed integer rounding cuts
 0 1 don't add mixed integer rounding cuts
 1 1 add mixed integer rounding cuts
redsplitcuts enumint 0 0 1 1 reduce and split cuts
 0 1 don't add reduce and split cuts
 1 1 add reduce and split cuts
cutsonlyatroot enumint 0 1 1 1 whether cuts are only generated at the root node
 0 1 generate cuts always in the branch and bound
 1 1 generate cuts only at root node
startalg enumstr 0 "dual" 1 1 LP solver for root node
 "primal" 1 primal simplex algorithm
 "dual" 1 dual simplex algorithm
writemps string 0 "" 1 1 create MPS file for problem
integertolerance double 0 1e-6 0 maxdouble 1 1 tolerance for integrality
printfrequency integer 0 10 0 maxint 1 1 print frequency
nodecompare enumstr 0 "default" 1 1 comparision method to determine tree search order
 "default" 1
 "depth" 1
 "objective" 1
reslim double 0 1000 0 maxdouble 1 1 resource limit
iterlim integer 0 10000 0 maxint 1 1 iteration limit
nodelim integer 0 maxint 0 maxint 1 1 node limit
nodlim integer 0 maxint 0 maxint 1 1 node limit
optca double 0 0 0 maxdouble 1 1 absolute stopping tolerance
optcr double 0 0.1 0 maxdouble 1 1 relative stopping tolerance
cutoff double 0 0 mindouble maxdouble 1 1 cutoff for objective function value
nobounds immediate nobounds 0 1 ignores bounds on options
readfile immediate readfile 0 1 read secondary option file
*
* Groups
* <group-ident> group <group-number <help-context> <help-text>
*
general group 1 1 General Options
*** End of file
