#!/bin/bash
# Copyright (C) GAMS Development and others 2008-2011
# All Rights Reserved.
# This file is distributed under the Eclipse Public License.
#
# Author: Stefan Vigerske

srcdir="@srcdir@"
gamspath="@GAMS_PATH@"

if test "x$gamspath" = xUNAVAILABLE; then
  echo "No GAMS system available."
  echo "Please download demo system from www.gams.com, rerun configure, install the solvers, and try again."
  exit 1
else
  echo "Using GAMS system at " $gamspath
fi

# clear up previous test, create new directory, and go there
rm -rf quality
mkdir -p quality
cd quality

#echo " "
echo Getting quality tests driver from GAMS test library...
"$gamspath/testlib" quality

if test ! -e quality.gms ; then
  echo "Failed to obtain quality.gms from GAMS test library."
  exit 1
fi

demoparam=
# remove this line to run also tests that require more than a GAMS demo license
demoparam="--DEMOSIZE=1"

solvers=
skiplist=
stdskiplist=
declare -a testlist
@COIN_HAS_IPOPT_TRUE@testlist[${#testlist[@]}]="--solver ipopt"

@COIN_HAS_SOPLEX_TRUE@testlist[${#testlist[@]}]="--solver soplex"

@COIN_HAS_CBC_TRUE@testlist[${#testlist[@]}]="--solver cbc"

@COIN_HAS_BONMIN_TRUE@testlist[${#testlist[@]}]="--solver bonmin"

@COIN_HAS_COUENNE_TRUE@solvers="$solvers , Couenne"
@COIN_HAS_COUENNE_TRUE@skiplist="$skiplist skip('Couenne','nlpqcp01')=yes;"
@COIN_HAS_COUENNE_TRUE@skiplist="$skiplist skip('Couenne','nlpqcp02')=yes;"
@COIN_HAS_COUENNE_TRUE@skiplist="$skiplist skip('Couenne','qcp01')=yes;"
@COIN_HAS_COUENNE_TRUE@skiplist="$skiplist skip('Couenne','sl4qcp01')=yes;"
@COIN_HAS_COUENNE_TRUE@skiplist="$skiplist skip('Couenne','qcp02')=yes;"
@COIN_HAS_COUENNE_TRUE@skiplist="$skiplist skip('Couenne','sl4qcp02')=yes;"
@COIN_HAS_COUENNE_TRUE@skiplist="$skiplist skip('Couenne','qcp05')=yes;"
@COIN_HAS_COUENNE_TRUE@skiplist="$skiplist skip('Couenne','qcp09')=yes;"
@COIN_HAS_COUENNE_TRUE@testlist[${#testlist[@]}]="--solver couenne --suite nlp user1=--MCHECKS=0"
@COIN_HAS_COUENNE_TRUE@testlist[${#testlist[@]}]="--solver couenne --suite qcp user1=--QPMCHECKS=0"

@COIN_HAS_SCIP_TRUE@testlist[${#testlist[@]}]="--solver scip --suite mip user1=--MIPMCHECKS=0"
@COIN_HAS_SCIP_TRUE@testlist[${#testlist[@]}]="--solver scip --suite qcp user1=--QPMCHECKS=0"
@COIN_HAS_SCIP_TRUE@testlist[${#testlist[@]}]="--solver scip --suite nlp user1=--QPMCHECKS=0"

echo "Patch quality test driver to get solvers and skip list in."
# We add our solvers to the list of master solvers and put our solver-model skiplist and our skiplist for stdout tests somewhere.
sed -e "/master set of solvers/s/\/;\$/$solvers \/;/" \
    -e "/^skip('nlpec'/s/^/$skiplist /" \
    -e "/^set slvstderrskip/s/^/$stdskiplist /" \
    -e "/^set slvtest/s/^/$stdskiplist /" \
    quality.gms > quality_coin.gms
echo ""

#indicates whether there was a failed test, also return code of this script
testfailed=0

for (( i=0 ; i<${#testlist[@]} ; i++ )) ; do
	echo "Run quality test $(($i+1)) of ${#testlist[@]} with options " ${testlist[$i]} $demoparam

	"$gamspath"/gams quality_coin.gms ${testlist[$i]} $demoparam lo=2 logfile=quality_test_$i.log

	if grep -q "Congratulations!" quality_test_$i.log ; then
		echo "Test " ${testlist[$i]} " passed."
	else
		testfailed=1
		rename _qa_ failed_test_$i_ *_qa_*
		mv failures_qa.gms failures_qa_$i.gms
		echo "Test " ${testlist[$i]} " failed. Content of failures_qa_$i.gms:" 1>&2
		cat failures_qa_$i.gms 1>&2
	fi
	echo ""

done

if test $testfailed = 0 ;
then
  echo "All quality tests passed."
else
  echo "There were failed quality tests."
fi

exit $testfailed
